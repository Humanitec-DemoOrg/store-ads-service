name: CI

on: [push]

env:
  IMAGE_NAME: store-ads-service
  GCP_REGISTRY: eu.gcr.io
  GCP_PROJECT: humanitec-demo-1

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Run Tests
        run: |
          go get github.com/golang/mock/mockgen
          go generate ./...
          go test ./... -cover -race
  
  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: get_version
        run: |
          echo Version: ${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
